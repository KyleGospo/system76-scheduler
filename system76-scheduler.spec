Name:           system76-scheduler
Version:        1.{{{ git_dir_version }}}
Release:        1%{?dist}
Summary:        System76 Scheduler daemon

License:        MPLv2.0
URL:            https://github.com/KyleGospo/system76-scheduler-for-fedora

VCS:        	{{{ git_dir_vcs }}}
Source:        	{{{ git_dir_pack }}}

# Realtime priority if bcc-tools is installed.
Requires:       bcc-tools

BuildRequires:  rust
BuildRequires:  cargo
BuildRequires:  just
BuildRequires:  systemd-rpm-macros  

%description
Auto-configure CFS and process priorities for improved desktop responsiveness 

%define debug_package %{nil}

%prep
{{{ git_dir_setup_macro }}}

# This will invoke `make` command in the directory with the extracted sources.
%build
EXECSNOOP_PATH=/usr/share/bcc/tools/execsnoop just

# This will copy the files generated by the `make` command above into
# the installable rpm package.
%install
just rootdir=%{buildroot} install

# Do post-installation
%post
%systemd_post com.system76.Scheduler.service

# Do before uninstallation
%preun
%systemd_preun com.system76.Scheduler.service

# Do after uninstallation
%postun
%systemd_postun_with_restart com.system76.Scheduler.service

# This lists all the files that are included in the rpm package and that
# are going to be installed into target system where the rpm is installed.
%files
%{_bindir}/system76-scheduler
%{_sysconfdir}/system76-scheduler/config.ron
%{_sysconfdir}/system76-scheduler/assignments/default.ron
%{_sysconfdir}/system76-scheduler/assignments/rhel.ron
%{_sysconfdir}/system76-scheduler/assignments/extra.ron
%{_sysconfdir}/system76-scheduler/exceptions/default.ron
%{_unitdir}/com.system76.Scheduler.service
%{_sysconfdir}/dbus-1/system.d/com.system76.Scheduler.conf

# Finally, changes from the latest release of your application are generated from
# your project's Git history. It will be empty until you make first annotated Git tag.
%changelog
{{{ git_dir_changelog }}}